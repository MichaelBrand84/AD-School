{"options":{"chapters":true,"chapter-id":"sec-AbleitungenUndAnwendungen"},"headings":["ein-erstes-beispiel","kostenfunktion-als-programm","unser-ziel-programme-ableiten","sec-AbleitungenUebersicht","sec-ProgFunc","eine-funktion-als-programm","kostenfunktion-gemäss-konvention","programm-in-funktion-übersetzen","funktion-in-graph-und-programm-übersetzen","ein-programm-mit-einer-schleife","sec-NumerischeVerfahren","sec-Newtonverfahren1D","das-newtonverfahren-programmieren","billard-auf-einem-runden-tisch","sec-gradientDescent","eigenschaften-der-gradient-descent-methode","gradient-descent-programmieren","minimaler-abstand","sec-AbleitungenUndAnwendungen"],"entries":[{"key":"sec-AbleitungenUndAnwendungen","order":{"number":1,"section":[1,0,0,0,0,0,0]}},{"order":{"number":4,"section":[1,4,1,0,0,0,0]},"key":"sec-Newtonverfahren1D","caption":"1.4.1 Das Newtonverfahren zur Berechnung von Nullstellen"},{"order":{"number":5,"section":[1,3,0,0,0,0,0]},"key":"exr-LoopProgToFun","caption":"Ein Programm mit einer Schleife"},{"order":{"number":3,"section":[1,4,0,0,0,0,0]},"key":"sec-NumerischeVerfahren","caption":"1.4 Numerische Verfahren, die mit Ableitungen arbeiten"},{"order":{"number":2,"section":[1,2,0,0,0,0,0]},"key":"tbl-DiffRegeln","caption":"Ableitungsregeln"},{"order":{"number":1,"section":[1,4,1,0,0,0,0]},"key":"eq-newton","caption":""},{"order":{"number":1,"section":[1,1,0,0,0,0,0]},"key":"exr-OptimierungsproblemProgrammieren","caption":"Kostenfunktion als Programm"},{"order":{"number":2,"section":[1,3,0,0,0,0,0]},"key":"exr-OptimierungsproblemNachKonvention","caption":"Kostenfunktion gemäss Konvention"},{"order":{"number":3,"section":[1,4,1,0,0,0,0]},"key":"fig-BillardExplanation","caption":"Billard auf einem runden Tisch"},{"order":{"number":1,"section":[1,2,0,0,0,0,0]},"key":"tbl-DiffGrundfunktionen","caption":"Ableitungen der Grundfunktionen"},{"order":{"number":1,"section":[1,3,0,0,0,0,0]},"key":"exm-FirstFunctionAsProgram","caption":"Eine Funktion als Programm"},{"order":{"number":5,"section":[1,4,2,0,0,0,0]},"key":"fig-graphofdistanceproblem","caption":"Graph der Abstandsfunktion d(t)."},{"order":{"number":8,"section":[1,4,2,0,0,0,0]},"key":"exr-GradientDescentFirstTry","caption":"Gradient Descent programmieren"},{"order":{"number":7,"section":[1,4,2,0,0,0,0]},"key":"exr-GradientDescentBasicProperties","caption":"Eigenschaften der Gradient Descent Methode"},{"order":{"number":3,"section":[1,3,0,0,0,0,0]},"key":"exr-ProgToFun","caption":"Programm in Funktion übersetzen"},{"order":{"number":1,"section":[1,2,0,0,0,0,0]},"key":"sec-AbleitungenUebersicht","caption":"1.2 Ableitungen von Funktionen"},{"order":{"number":2,"section":[1,4,1,0,0,0,0]},"key":"exm-Billard","caption":"Billard auf einem runden Tisch"},{"order":{"number":2,"section":[1,3,0,0,0,0,0]},"key":"fig-compTreeSimple2","caption":"Computational Graph zum Ausdruck y = ln(x^2 + 1) / sqrt(x^2 + 1 + x)."},{"order":{"number":2,"section":[1,3,0,0,0,0,0]},"key":"sec-ProgFunc","caption":"1.3 Programme als Funktionen"},{"order":{"number":3,"section":[1,4,2,0,0,0,0]},"key":"exm-GDApplication","caption":"Minimaler Abstand"},{"order":{"number":1,"section":[1,3,0,0,0,0,0]},"key":"fig-compTreeSimple","caption":"Ausdrucksbaum zum Ausdruck y = (2 + x) * (x - 3)."},{"order":{"number":4,"section":[1,3,0,0,0,0,0]},"key":"exr-FunToGraphProg","caption":"Funktion in Graph und Programm übersetzen"},{"order":{"number":2,"section":[1,4,2,0,0,0,0]},"key":"eq-gradientDescent","caption":""},{"order":{"number":6,"section":[1,4,1,0,0,0,0]},"key":"exr-NewtonFirstTry","caption":"Das Newtonverfahren programmieren"},{"order":{"number":4,"section":[1,4,1,0,0,0,0]},"key":"fig-graphofbillard","caption":"Graph des Skalarprodukts als Funktion des Polarwinkels x des Punktes X = (cos(x) | sin(x)). Die Nullstellen entsprechen den Winkeln, bei denen die weisse Kugel die blaue Kugel trifft, nachdem sie genau einmal an die Bande gespielt wurde."},{"order":{"number":5,"section":[1,4,2,0,0,0,0]},"key":"sec-gradientDescent","caption":"1.4.2 Gradient Descent zum Auffinden lokaler Minima"}]}