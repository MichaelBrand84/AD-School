{"entries":[{"key":"sec-AbleitungenUndAnwendungen","order":{"number":1,"section":[1,0,0,0,0,0,0]}},{"caption":"Eine Funktion als Programm","key":"exm-FirstFunctionAsProgram","order":{"number":1,"section":[1,3,0,0,0,0,0]}},{"caption":"1.4.2 Gradient Descent zum Auffinden lokaler Minima","key":"sec-gradientDescent","order":{"number":5,"section":[1,4,2,0,0,0,0]}},{"caption":"Kostenfunktion als Programm","key":"exr-OptimierungsproblemProgrammieren","order":{"number":1,"section":[1,1,0,0,0,0,0]}},{"caption":"Graph des Skalarprodukts als Funktion des Polarwinkels x des Punktes X = (cos(x) | sin(x)). Die Nullstellen entsprechen den Winkeln, bei denen die weisse Kugel die blaue Kugel trifft, nachdem sie genau einmal an die Bande gespielt wurde.","key":"fig-graphofbillard","order":{"number":4,"section":[1,4,1,0,0,0,0]}},{"caption":"Computational Graph zum Ausdruck y = ln(x^2 + 1) / sqrt(x^2 + 1 + x).","key":"fig-compTreeSimple2","order":{"number":2,"section":[1,3,0,0,0,0,0]}},{"caption":"Ein Programm mit einer Schleife","key":"exr-LoopProgToFun","order":{"number":5,"section":[1,3,0,0,0,0,0]}},{"caption":"Kostenfunktion gemäss Konvention","key":"exr-OptimierungsproblemNachKonvention","order":{"number":2,"section":[1,3,0,0,0,0,0]}},{"caption":"Minimaler Abstand","key":"exm-GDApplication","order":{"number":3,"section":[1,4,2,0,0,0,0]}},{"caption":"Eigenschaften der Gradient Descent Methode","key":"exr-GradientDescentBasicProperties","order":{"number":7,"section":[1,4,2,0,0,0,0]}},{"caption":"Ableitungen der Grundfunktionen","key":"tbl-DiffGrundfunktionen","order":{"number":1,"section":[1,2,0,0,0,0,0]}},{"caption":"Programm in Funktion übersetzen","key":"exr-ProgToFun","order":{"number":3,"section":[1,3,0,0,0,0,0]}},{"caption":"1.4 Numerische Verfahren, die mit Ableitungen arbeiten","key":"sec-NumerischeVerfahren","order":{"number":3,"section":[1,4,0,0,0,0,0]}},{"caption":"1.3 Programme als Funktionen","key":"sec-ProgFunc","order":{"number":2,"section":[1,3,0,0,0,0,0]}},{"caption":"Graph der Abstandsfunktion d(t).","key":"fig-graphofdistanceproblem","order":{"number":5,"section":[1,4,2,0,0,0,0]}},{"caption":"Gradient Descent programmieren","key":"exr-GradientDescentFirstTry","order":{"number":8,"section":[1,4,2,0,0,0,0]}},{"caption":"Billard auf einem runden Tisch","key":"exm-Billard","order":{"number":2,"section":[1,4,1,0,0,0,0]}},{"caption":"Das Newtonverfahren programmieren","key":"exr-NewtonFirstTry","order":{"number":6,"section":[1,4,1,0,0,0,0]}},{"caption":"","key":"eq-gradientDescent","order":{"number":2,"section":[1,4,2,0,0,0,0]}},{"caption":"1.2 Ableitungen von Funktionen","key":"sec-AbleitungenUebersicht","order":{"number":1,"section":[1,2,0,0,0,0,0]}},{"caption":"Ableitungsregeln","key":"tbl-DiffRegeln","order":{"number":2,"section":[1,2,0,0,0,0,0]}},{"caption":"Billard auf einem runden Tisch","key":"fig-BillardExplanation","order":{"number":3,"section":[1,4,1,0,0,0,0]}},{"caption":"","key":"eq-newton","order":{"number":1,"section":[1,4,1,0,0,0,0]}},{"caption":"Ausdrucksbaum zum Ausdruck y = (2 + x) * (x - 3).","key":"fig-compTreeSimple","order":{"number":1,"section":[1,3,0,0,0,0,0]}},{"caption":"1.4.1 Das Newtonverfahren zur Berechnung von Nullstellen","key":"sec-Newtonverfahren1D","order":{"number":4,"section":[1,4,1,0,0,0,0]}},{"caption":"Funktion in Graph und Programm übersetzen","key":"exr-FunToGraphProg","order":{"number":4,"section":[1,3,0,0,0,0,0]}}],"options":{"chapters":true,"chapter-id":"sec-AbleitungenUndAnwendungen"},"headings":["ein-erstes-beispiel","kostenfunktion-als-programm","unser-ziel-programme-ableiten","sec-AbleitungenUebersicht","sec-ProgFunc","eine-funktion-als-programm","kostenfunktion-gemäss-konvention","programm-in-funktion-übersetzen","funktion-in-graph-und-programm-übersetzen","ein-programm-mit-einer-schleife","sec-NumerischeVerfahren","sec-Newtonverfahren1D","das-newtonverfahren-programmieren","billard-auf-einem-runden-tisch","sec-gradientDescent","eigenschaften-der-gradient-descent-methode","gradient-descent-programmieren","minimaler-abstand","sec-AbleitungenUndAnwendungen"]}